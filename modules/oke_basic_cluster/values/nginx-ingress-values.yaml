controller:
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/oci-load-balancer-shape: "flexible"
      service.beta.kubernetes.io/oci-load-balancer-shape-flex-min: "10"
      service.beta.kubernetes.io/oci-load-balancer-shape-flex-max: "10"
      service.beta.kubernetes.io/oci-load-balancer-subnet1: "${lb_subnet_id}"
      service.beta.kubernetes.io/oci-load-balancer-is-private: "false"
      service.beta.kubernetes.io/oci-load-balancer-reserved-ip: "false"
  
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false
  
  resources:
    requests:
      cpu: 100m
      memory: 90Mi
    limits:
      cpu: 200m
      memory: 180Mi

  # Additional NGINX configuration
  config:
    use-forwarded-headers: "true"
    compute-full-forwarded-for: "true"
    use-proxy-protocol: "false"
    server-tokens: "false"
    ssl-protocols: "TLSv1.2 TLSv1.3"
    ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"

  # Security settings
  securityContext:
    allowPrivilegeEscalation: true
    capabilities:
      add:
        - NET_BIND_SERVICE
      drop:
        - ALL
    runAsUser: 101
    runAsNonRoot: true

  # Pod security context
  podSecurityContext:
    fsGroup: 101
    runAsNonRoot: true
    runAsUser: 101

  # Liveness and readiness probes
  livenessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  readinessProbe:
    failureThreshold: 3
    initialDelaySeconds: 10
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  # Horizontal Pod Autoscaling
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  # Pod disruption budget
  podDisruptionBudget:
    enabled: false
    minAvailable: 1

  # Service account
  serviceAccount:
    create: true
    name: nginx-ingress-controller-sa
    annotations: {}

  # Default backend
  defaultBackend:
    enabled: true
    name: defaultbackend
    image:
      repository: k8s.gcr.io/defaultbackend-amd64
      tag: "1.5"
      pullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 10m
        memory: 20Mi
      limits:
        cpu: 20m
        memory: 40Mi 