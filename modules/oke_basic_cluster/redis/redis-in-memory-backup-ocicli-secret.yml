apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      volumes:
        - name: redis-data
          emptyDir: {}
        - name: oci-config
          secret:
            secretName: oci-cli-secret
      initContainers:
        - name: redis-backup-restore
          image: oraclelinux:8
          command: ["/bin/bash", "-c"]
          args:
            - |
              set -ex
              BUCKET_NAME="${bucket_name}"
              dnf install -y oraclelinux-developer-release-el8 python36 zip unzip curl > /dev/null 2>&1
              curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh | bash -s -- --accept-all-defaults
              export PATH="/root/bin:$PATH"

              # Install jq (tiny JSON processor)
              dnf install -y jq > /dev/null 2>&1

              mkdir -p /root/.oci
              cp /oci-config/config /root/.oci/config
              cp /oci-config/key_file /root/.oci/key_file
              chmod 600 /root/.oci/key_file

              echo "Restoring latest dump if available..."

              # Get raw JSON first
              OBJ_JSON=$(oci os object list -bn $BUCKET_NAME)

              # Check if 'data' exists and is a non-empty array
              OBJ_COUNT=$(echo "$OBJ_JSON" | jq '.data | if type=="array" then length else 0 end')

              if [[ "$OBJ_COUNT" -gt 0 ]]; then
                LATEST_OBJ=$(echo "$OBJ_JSON" | jq -r '.data | sort_by(."time-modified") | .[-1].name')
                echo "Found latest dump: $LATEST_OBJ. Downloading..."
                oci os object get -bn $BUCKET_NAME --name "$LATEST_OBJ" --file /data/dump.rdb
              else
                echo "No previous Redis dump found. Starting fresh."
              fi
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: oci-config
              mountPath: /oci-config
      containers:
        - name: redis
          image: redis:7-alpine
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-data
              mountPath: /data
          args: ["redis-server", "--save", "300", "1", "--dir", "/data"]
        - name: redis-backup
          image: oraclelinux:8
          command: ["/bin/bash", "-c"]
          args:
            - |
              set -ex
              BUCKET_NAME="${bucket_name}"
              dnf install -y oraclelinux-developer-release-el8 python36 zip unzip curl > /dev/null 2>&1
              curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh | bash -s -- --accept-all-defaults
              export PATH="/root/bin:$PATH"

              mkdir -p /root/.oci
              cp /oci-config/config /root/.oci/config
              cp /oci-config/key_file /root/.oci/key_file
              chmod 600 /root/.oci/key_file

              # Start backup loop every 5 minutes or 24 hours
              while true; do
                # sleep 300
                sleep 86400  # 24 hours in seconds
                TIMESTAMP=$(date +%F-%H%M)
                cp /data/dump.rdb /tmp/dump-$TIMESTAMP.rdb || true
                oci os object put -bn $BUCKET_NAME --file /tmp/dump-$TIMESTAMP.rdb --name dump-$TIMESTAMP.rdb --force
                rm -f /tmp/dump-$TIMESTAMP.rdb
              done
          volumeMounts:
            - name: redis-data
              mountPath: /data
            - name: oci-config
              mountPath: /oci-config